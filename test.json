IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0
        },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: null,
      ended: true,
      endEmitted: false,
      reading: false,
      sync: true,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: true,
      decoder: null,
      encoding: null,
        [Symbol(kPaused)
        ]: null
    },
    readable: true,
    _events: [Object: null prototype
    ] {
      end: [Function: resetHeadersTimeoutOnReqEnd
        ]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0
            },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
            [Symbol(kPaused)
            ]: false
        },
      readable: true,
      _events: [Object: null prototype
        ] {
        end: [Array
            ],
        timeout: [Function: socketOnTimeout
            ],
        data: [Function: bound socketOnData
            ],
        error: [Function: socketOnError
            ],
        close: [Array
            ],
        drain: [Function: bound socketOnDrain
            ],
        resume: [Function: onSocketResume
            ],
        pause: [Function: onSocketPause
            ]
        },
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite
            ],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object
            ]
        },
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        insecureHTTPParser: undefined,
        _events: [Object: null prototype
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 60000,
        _connectionKey: '6: : : : 5000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(asyncId)
            ]: 94
        },
      _server: Server {
        insecureHTTPParser: undefined,
        _events: [Object: null prototype
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 60000,
        _connectionKey: '6: : : : 5000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(asyncId)
            ]: 94
        },
      timeout: 120000,
      parser: HTTPParser {
        '0': [Function: parserOnHeaders
            ],
        '1': [Function: parserOnHeadersComplete
            ],
        '2': [Function: parserOnBody
            ],
        '3': [Function: parserOnMessageComplete
            ],
        '4': [Function: bound onParserExecute
            ],
        _headers: [],
        _url: '',
        socket: [Circular
            ],
        incoming: [Circular
            ],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming
            ],
        parsingHeadersStart: 0,
            [Symbol(resource_symbol)
            ]: [HTTPServerAsyncResource
            ]
        },
      on: [Function: socketListenerWrap
        ],
      addListener: [Function: socketListenerWrap
        ],
      prependListener: [Function: socketListenerWrap
        ],
      _paused: false,
      _httpMessage: ServerResponse {
        _events: [Object: null prototype
            ],
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular
            ],
        connection: [Circular
            ],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData
            ],
        _sent100: false,
        _expect_continue: false,
        req: [Circular
            ],
        locals: [Object: null prototype
            ] {},
        writeHead: [Function: writeHead
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(kNeedDrain)
            ]: false,
            [Symbol(corked)
            ]: 0,
            [Symbol(kOutHeaders)
            ]: [Object: null prototype
            ]
        },
        [Symbol(asyncId)
        ]: 330,
        [Symbol(kHandle)
        ]: TCP {
        reading: true,
        onconnection: null,
        _consumed: true,
            [Symbol(owner_symbol)
            ]: [Circular
            ]
        },
        [Symbol(kSetNoDelay)
        ]: false,
        [Symbol(lastWriteQueueSize)
        ]: 0,
        [Symbol(timeout)
        ]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList
            ],
        _idleNext: [TimersList
            ],
        _idleStart: 53518,
        _onTimeout: [Function: bound
            ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
            [Symbol(refed)
            ]: false,
            [Symbol(asyncId)
            ]: 331,
            [Symbol(triggerId)
            ]: 330
        },
        [Symbol(kBuffer)
        ]: null,
        [Symbol(kBufferCb)
        ]: null,
        [Symbol(kBufferGen)
        ]: null,
        [Symbol(kCapture)
        ]: false,
        [Symbol(kBytesRead)
        ]: 0,
        [Symbol(kBytesWritten)
        ]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0
            },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
            [Symbol(kPaused)
            ]: false
        },
      readable: true,
      _events: [Object: null prototype
        ] {
        end: [Array
            ],
        timeout: [Function: socketOnTimeout
            ],
        data: [Function: bound socketOnData
            ],
        error: [Function: socketOnError
            ],
        close: [Array
            ],
        drain: [Function: bound socketOnDrain
            ],
        resume: [Function: onSocketResume
            ],
        pause: [Function: onSocketPause
            ]
        },
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite
            ],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object
            ]
        },
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        insecureHTTPParser: undefined,
        _events: [Object: null prototype
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 60000,
        _connectionKey: '6: : : : 5000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(asyncId)
            ]: 94
        },
      _server: Server {
        insecureHTTPParser: undefined,
        _events: [Object: null prototype
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 60000,
        _connectionKey: '6: : : : 5000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(asyncId)
            ]: 94
        },
      timeout: 120000,
      parser: HTTPParser {
        '0': [Function: parserOnHeaders
            ],
        '1': [Function: parserOnHeadersComplete
            ],
        '2': [Function: parserOnBody
            ],
        '3': [Function: parserOnMessageComplete
            ],
        '4': [Function: bound onParserExecute
            ],
        _headers: [],
        _url: '',
        socket: [Circular
            ],
        incoming: [Circular
            ],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming
            ],
        parsingHeadersStart: 0,
            [Symbol(resource_symbol)
            ]: [HTTPServerAsyncResource
            ]
        },
      on: [Function: socketListenerWrap
        ],
      addListener: [Function: socketListenerWrap
        ],
      prependListener: [Function: socketListenerWrap
        ],
      _paused: false,
      _httpMessage: ServerResponse {
        _events: [Object: null prototype
            ],
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular
            ],
        connection: [Circular
            ],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData
            ],
        _sent100: false,
        _expect_continue: false,
        req: [Circular
            ],
        locals: [Object: null prototype
            ] {},
        writeHead: [Function: writeHead
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(kNeedDrain)
            ]: false,
            [Symbol(corked)
            ]: 0,
            [Symbol(kOutHeaders)
            ]: [Object: null prototype
            ]
        },
        [Symbol(asyncId)
        ]: 330,
        [Symbol(kHandle)
        ]: TCP {
        reading: true,
        onconnection: null,
        _consumed: true,
            [Symbol(owner_symbol)
            ]: [Circular
            ]
        },
        [Symbol(kSetNoDelay)
        ]: false,
        [Symbol(lastWriteQueueSize)
        ]: 0,
        [Symbol(timeout)
        ]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList
            ],
        _idleNext: [TimersList
            ],
        _idleStart: 53518,
        _onTimeout: [Function: bound
            ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
            [Symbol(refed)
            ]: false,
            [Symbol(asyncId)
            ]: 331,
            [Symbol(triggerId)
            ]: 330
        },
        [Symbol(kBuffer)
        ]: null,
        [Symbol(kBufferCb)
        ]: null,
        [Symbol(kBufferGen)
        ]: null,
        [Symbol(kCapture)
        ]: false,
        [Symbol(kBytesRead)
        ]: 0,
        [Symbol(kBytesWritten)
        ]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      host: 'localhost: 5000',
      connection: 'keep-alive',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'upgrade-insecure-requests': '1',
      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36',
      accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,* /*;q=0.8,application/signed-exchange;v=b3;q=0.9',
      'sec-fetch-site': 'cross-site',
      'sec-fetch-mode': 'navigate',
      'sec-fetch-user': '?1',
      'sec-fetch-dest': 'document',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'de-DE,de;q=0.9,en-DE;q=0.8,en-GB;q=0.7,en;q=0.6,en-US;q=0.5',
      cookie: 'session=eyJwYXNzcG9ydCI6eyJ1c2VyIjpbeyJfaWQiOiI2MDA4MDcwNTNhNDM2MjBiZDg1MGNmZmUiLCJ1c2VyTmFtZSI6Ikdlb3JnIFRyZWl0eiIsImdvb2dsZUlkIjoiMTEyMTkwNzc0MTIyMTU5Nzc3NDE2IiwiZmlyc3ROYW1lIjoiR2VvcmciLCJlbWFpbCI6Imdlb3JnQHN1cGVyLWNvZGUuZGUiLCJ1cmxfcGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hLS9BT2gxNEdoUWh1bTVDOVZ4RUd1aEkyMFFFX2x6bTBacHRRdms1ZFprN210aT1zOTYtYyIsIl9fdiI6MH1dfX0=; session.sig=5SHc9w7WyP_fdkG37jwyJ39I1Qo'
    },
    rawHeaders: [
      'Host',
      'localhost:5000',
      'Connection',
      'keep-alive',
      'Pragma',
      'no-cache',
      'Cache-Control',
      'no-cache',
      'Upgrade-Insecure-Requests',
      '1',
      'User-Agent',
      'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36',
      'Accept',
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
      'Sec-Fetch-Site',
      'cross-site',
      'Sec-Fetch-Mode',
      'navigate',
      'Sec-Fetch-User',
      '?1',
      'Sec-Fetch-Dest',
      'document',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'de-DE,de;q=0.9,en-DE;q=0.8,en-GB;q=0.7,en;q=0.6,en-US;q=0.5',
      'Cookie',
      'session=eyJwYXNzcG9ydCI6eyJ1c2VyIjpbeyJfaWQiOiI2MDA4MDcwNTNhNDM2MjBiZDg1MGNmZmUiLCJ1c2VyTmFtZSI6Ikdlb3JnIFRyZWl0eiIsImdvb2dsZUlkIjoiMTEyMTkwNzc0MTIyMTU5Nzc3NDE2IiwiZmlyc3ROYW1lIjoiR2VvcmciLCJlbWFpbCI6Imdlb3JnQHN1cGVyLWNvZGUuZGUiLCJ1cmxfcGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hLS9BT2gxNEdoUWh1bTVDOVZ4RUd1aEkyMFFFX2x6bTBacHRRdms1ZFprN210aT1zOTYtYyIsIl9fdiI6MH1dfX0=; session.sig=5SHc9w7WyP_fdkG37jwyJ39I1Qo'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0
            },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        decoder: null,
        encoding: null,
            [Symbol(kPaused)
            ]: false
        },
      readable: true,
      _events: [Object: null prototype
        ] {
        end: [Array
            ],
        timeout: [Function: socketOnTimeout
            ],
        data: [Function: bound socketOnData
            ],
        error: [Function: socketOnError
            ],
        close: [Array
            ],
        drain: [Function: bound socketOnDrain
            ],
        resume: [Function: onSocketResume
            ],
        pause: [Function: onSocketPause
            ]
        },
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite
            ],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object
            ]
        },
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        insecureHTTPParser: undefined,
        _events: [Object: null prototype
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 60000,
        _connectionKey: '6: : : : 5000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(asyncId)
            ]: 94
        },
      _server: Server {
        insecureHTTPParser: undefined,
        _events: [Object: null prototype
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 60000,
        _connectionKey: '6: : : : 5000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(asyncId)
            ]: 94
        },
      timeout: 120000,
      parser: HTTPParser {
        '0': [Function: parserOnHeaders
            ],
        '1': [Function: parserOnHeadersComplete
            ],
        '2': [Function: parserOnBody
            ],
        '3': [Function: parserOnMessageComplete
            ],
        '4': [Function: bound onParserExecute
            ],
        _headers: [],
        _url: '',
        socket: [Circular
            ],
        incoming: [Circular
            ],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming
            ],
        parsingHeadersStart: 0,
            [Symbol(resource_symbol)
            ]: [HTTPServerAsyncResource
            ]
        },
      on: [Function: socketListenerWrap
        ],
      addListener: [Function: socketListenerWrap
        ],
      prependListener: [Function: socketListenerWrap
        ],
      _paused: false,
      _httpMessage: ServerResponse {
        _events: [Object: null prototype
            ],
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular
            ],
        connection: [Circular
            ],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData
            ],
        _sent100: false,
        _expect_continue: false,
        req: [Circular
            ],
        locals: [Object: null prototype
            ] {},
        writeHead: [Function: writeHead
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(kNeedDrain)
            ]: false,
            [Symbol(corked)
            ]: 0,
            [Symbol(kOutHeaders)
            ]: [Object: null prototype
            ]
        },
        [Symbol(asyncId)
        ]: 330,
        [Symbol(kHandle)
        ]: TCP {
        reading: true,
        onconnection: null,
        _consumed: true,
            [Symbol(owner_symbol)
            ]: [Circular
            ]
        },
        [Symbol(kSetNoDelay)
        ]: false,
        [Symbol(lastWriteQueueSize)
        ]: 0,
        [Symbol(timeout)
        ]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList
            ],
        _idleNext: [TimersList
            ],
        _idleStart: 53518,
        _onTimeout: [Function: bound
            ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
            [Symbol(refed)
            ]: false,
            [Symbol(asyncId)
            ]: 331,
            [Symbol(triggerId)
            ]: 330
        },
        [Symbol(kBuffer)
        ]: null,
        [Symbol(kBufferCb)
        ]: null,
        [Symbol(kBufferGen)
        ]: null,
        [Symbol(kCapture)
        ]: false,
        [Symbol(kBytesRead)
        ]: 0,
        [Symbol(kBytesWritten)
        ]: 0
    },
    _consuming: false,
    _dumped: false,
    next: [Function: next
    ],
    baseUrl: '/profile',
    originalUrl: '/profile',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype
        ] { finish: [Function: bound resOnFinish
            ]
        },
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState
            ],
        readable: true,
        _events: [Object: null prototype
            ],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState
            ],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server
            ],
        _server: [Server
            ],
        timeout: 120000,
        parser: [HTTPParser
            ],
        on: [Function: socketListenerWrap
            ],
        addListener: [Function: socketListenerWrap
            ],
        prependListener: [Function: socketListenerWrap
            ],
        _paused: false,
        _httpMessage: [Circular
            ],
            [Symbol(asyncId)
            ]: 330,
            [Symbol(kHandle)
            ]: [TCP
            ],
            [Symbol(kSetNoDelay)
            ]: false,
            [Symbol(lastWriteQueueSize)
            ]: 0,
            [Symbol(timeout)
            ]: Timeout {
          _idleTimeout: 120000,
          _idlePrev: [TimersList
                ],
          _idleNext: [TimersList
                ],
          _idleStart: 53518,
          _onTimeout: [Function: bound
                ],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
                [Symbol(refed)
                ]: false,
                [Symbol(asyncId)
                ]: 331,
                [Symbol(triggerId)
                ]: 330
            },
            [Symbol(kBuffer)
            ]: null,
            [Symbol(kBufferCb)
            ]: null,
            [Symbol(kBufferGen)
            ]: null,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kBytesRead)
            ]: 0,
            [Symbol(kBytesWritten)
            ]: 0
        },
      connection: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState
            ],
        readable: true,
        _events: [Object: null prototype
            ],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState
            ],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server
            ],
        _server: [Server
            ],
        timeout: 120000,
        parser: [HTTPParser
            ],
        on: [Function: socketListenerWrap
            ],
        addListener: [Function: socketListenerWrap
            ],
        prependListener: [Function: socketListenerWrap
            ],
        _paused: false,
        _httpMessage: [Circular
            ],
            [Symbol(asyncId)
            ]: 330,
            [Symbol(kHandle)
            ]: [TCP
            ],
            [Symbol(kSetNoDelay)
            ]: false,
            [Symbol(lastWriteQueueSize)
            ]: 0,
            [Symbol(timeout)
            ]: Timeout {
          _idleTimeout: 120000,
          _idlePrev: [TimersList
                ],
          _idleNext: [TimersList
                ],
          _idleStart: 53518,
          _onTimeout: [Function: bound
                ],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
                [Symbol(refed)
                ]: false,
                [Symbol(asyncId)
                ]: 331,
                [Symbol(triggerId)
                ]: 330
            },
            [Symbol(kBuffer)
            ]: null,
            [Symbol(kBufferCb)
            ]: null,
            [Symbol(kBufferGen)
            ]: null,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kBytesRead)
            ]: 0,
            [Symbol(kBytesWritten)
            ]: 0
        },
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData
        ],
      _sent100: false,
      _expect_continue: false,
      req: [Circular
        ],
      locals: [Object: null prototype
        ] {},
      writeHead: [Function: writeHead
        ],
        [Symbol(kCapture)
        ]: false,
        [Symbol(kNeedDrain)
        ]: false,
        [Symbol(corked)
        ]: 0,
        [Symbol(kOutHeaders)
        ]: [Object: null prototype
        ] { 'x-powered-by': [Array
            ]
        }
    },
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/profile',
      path: '/profile',
      href: '/profile',
      _raw: '/profile'
    },
    _passport: {
      instance: Authenticator {
        _key: 'passport',
        _strategies: [Object
            ],
        _serializers: [Array
            ],
        _deserializers: [Array
            ],
        _infoTransformers: [],
        _framework: [Object
            ],
        _userProperty: 'user',
        _sm: [SessionManager
            ],
        Authenticator: [Function: Authenticator
            ],
        Passport: [Function: Authenticator
            ],
        Strategy: [Function
            ],
        strategies: [Object
            ]
        }
    },
    sessionCookies: Cookies {
      secure: undefined,
      request: [Circular
        ],
      response: ServerResponse {
        _events: [Object: null prototype
            ],
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Socket
            ],
        connection: [Socket
            ],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData
            ],
        _sent100: false,
        _expect_continue: false,
        req: [Circular
            ],
        locals: [Object: null prototype
            ] {},
        writeHead: [Function: writeHead
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(kNeedDrain)
            ]: false,
            [Symbol(corked)
            ]: 0,
            [Symbol(kOutHeaders)
            ]: [Object: null prototype
            ]
        },
      keys: Keygrip { sign: [Function
            ], verify: [Function
            ], index: [Function
            ]
        }
    },
    sessionOptions: {},
    sessionKey: 'session',
    session: [Getter/Setter
    ],
    route: Route {
      path: '/',
      stack: [
            [Layer
            ],
            [Layer
            ]
        ],
      methods: { get: true
        }
    },
    [Symbol(kCapture)
    ]: false
}